"""Descripción de los cambios

Revision ID: 848b4791c3ea
Revises: 
Create Date: 2024-09-03 22:29:24.019054

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy import Column, Integer, String
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '848b4791c3ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('estado_aula',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estado_reserva',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estado_solicitud_registro',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estado_usuario',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tipo_aula',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aula',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('capacidad', sa.Integer(), nullable=False),
    sa.Column('id_estado_aula', sa.Uuid(), nullable=False),
    sa.Column('id_tipo_aula', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado_aula'], ['estado_aula.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_aula'], ['tipo_aula.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuario',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('correo', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('contraseña', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_rol', sa.Uuid(), nullable=False),
    sa.Column('id_estado_usuario', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado_usuario'], ['estado_usuario.id'], ),
    sa.ForeignKeyConstraint(['id_rol'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('correo')
    )
    op.create_table('notificaciones',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('mensaje', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('fecha_envio', sa.DateTime(), nullable=False),
    sa.Column('id_usuario', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reserva',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=False),
    sa.Column('hora_inicio', sa.DateTime(), nullable=False),
    sa.Column('hora_fin', sa.DateTime(), nullable=False),
    sa.Column('razon_rechazo', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id_usuario', sa.Uuid(), nullable=False),
    sa.Column('id_aula', sa.Uuid(), nullable=False),
    sa.Column('id_estado_reserva', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_aula'], ['aula.id'], ),
    sa.ForeignKeyConstraint(['id_estado_reserva'], ['estado_reserva.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sesion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('inicio_sesion', sa.DateTime(timezone=True), nullable=False),
    sa.Column('fin_sesion', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id_usuario', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solicitud_registro',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fecha_solicitud', sa.DateTime(), nullable=False),
    sa.Column('id_usuario', sa.Uuid(), nullable=False),
    sa.Column('id_estado_solicitud_registro', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado_solicitud_registro'], ['estado_solicitud_registro.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('solicitud_registro')
    op.drop_table('sesion')
    op.drop_table('reserva')
    op.drop_table('notificaciones')
    op.drop_table('usuario')
    op.drop_table('aula')
    op.drop_table('tipo_aula')
    op.drop_table('roles')
    op.drop_table('estado_usuario')
    op.drop_table('estado_solicitud_registro')
    op.drop_table('estado_reserva')
    op.drop_table('estado_aula')
    # ### end Alembic commands ###
